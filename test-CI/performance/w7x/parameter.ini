!================================================================================================================================= !
! PARAMETERFILE
! execute with
! > ../../build/bin/gvec parameter.ini

!================================================================================================================================= !
! running tests at startup
!================================================================================================================================= !
  testlevel =-1 ! different levels for testing. -1: off, >0: run tests
    testdbg = F !T: set all tests to failed (to debug tests), F: only failed tests are printed

!================================================================================================================================= !
! compute initial solution from existing equilibrium
!================================================================================================================================= !

  whichInitEquilibrium = 1 ! 0: only from input parameters, 1: from VMEC netcdf file, 2: from internally generated Soloview

  ProjectName = W7X
    vmecwoutFile= wout_d23p4_tm.nc

  init_fromBConly = F ! true: only use axis and boundary for X1,X2 (True is default)
                      ! false: only needed if VMEC data is used, interpolate on full mesh s=0...
  init_LA         = T !T: compute lambda from initial mapping (default),  F: lambda=0 / from VMEC at initialization

!================================================================================================================================= !
! visualization parameters
!================================================================================================================================= !
which_visu = 0          ! 0: visualize gvec data, 1: visualize vmec data (whichInitEquilibrium=1)
visu1D       = 0 !12       ! 0: off, >0:  write 1D data of all modes of R,Z,lambda over the flux / radial coordinate
  np_1d      = 5
visu2D       = 0 !12       ! 0: off, 1: write paraview file of boundary, 2: write paraview file for zeta=const. planes
  np_visu_BC     =   (/80,80/)

  np_visu_planes = (/3,40,10/)
  visu_planes_min = (/0.,0.,0. /)  ! range of visualization for s,theta,zeta: min in [0,1]
  visu_planes_max = (/1.,1.,0.2/)  !                                          max in [0,1]
visu3D       = 0        ! 0: off, 1: write 3D paraview file
  np_visu_3D  = (/2,40,40/)
  visu_3D_min = (/0.,0.,0. /)  ! range of visualization for s,theta,zeta: min in [0,1]
  visu_3D_max = (/1.,1.,0.2/)  !                                          max in [0,1]

!================================================================================================================================= !
! grid in s direction
!================================================================================================================================= !

  sgrid_nElems=100
  sgrid_grid_type=4  ! 0: uniform, 1: sqrt (finer at edge), 2: s^2 (finer at center), 3: bump (fine at edge and center)

!================================================================================================================================= !
! discretization parameters
!================================================================================================================================= !

  degGP  = 6               ! number of gauss points per radial element

  fac_nyq = -1              ! number of points for integration in (theta,zeta), :mn_nyq=fac_nyq * max(mn_max (all variables))
  mn_nyq = (/41,41/)

  X1X2_deg  = 4            !polynomial degree in radial discretization for X1 and X2 variable
!  X1_mn_max = (/ 9,10/)   !maximum mumber of fourier modes (mmax,nmax)
!  X2_mn_max = (/ 9,10/)   !maximum mumber of fourier modes (mmax,nmax)

!  X1_sin_cos = _cos_       !which fourier modes: can be either _SIN_,_COS_, or _sin_cos_
!  X2_sin_cos = _sin_       !

  LA_deg    = 4            ! polynomial degree in radial discretization for Lambda variable
!  LA_mn_max = (/9,10/)   ! maximum mumber of fourier modes (mmax,nmax)
!  LA_sin_cos = _sin_       !

!================================================================================================================================= !
! iteration
!================================================================================================================================= !
MaxIter =2000          ! maximum number of iterations
start_dt=0.4           ! first timestep, is automatically adapted
minimize_tol=1.0e-12   ! absolute tolerance |Force|*dt<abstol
!outputIter = 500         ! number of iterations after which a state & visu is written (if not set, only last state is written)
logIter = 100            ! write log of iterations to screen

PrecondType = 1 ! -1: off(default), 1: on
MinimizerType = 10 ! 0: gradient descent(default), 10: accelerated gradient descent
