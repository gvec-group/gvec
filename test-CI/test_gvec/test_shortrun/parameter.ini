!================================================================================================================================= !
! PARAMETERFILE 
! execute with
! > ../build/bin/gvec parameter.ini

!================================================================================================================================= !
! running tests at startup 
!================================================================================================================================= !
  testlevel = 2  ! different levels for testing. -1: off, >0: run tests
    testdbg = F !T: set all tests to failed (to debug tests), F: only failed tests are printed

!================================================================================================================================= !
! compute initial solution from existing equilibrium
!================================================================================================================================= !

ProjectName = GITLAB_RUN

whichInitEquilibrium = 0 ! 0: only from input parameters, 1: from VMEC netcdf file, 2: from internally generated Soloview
!  vmecwoutFile= toksy/wout_toksy.nc


 init_fromBConly = T ! true: only use axis and boundary for X1,X2 (True is default) 
                      ! false: only needed if VMEC data is used, interpolate on full mesh s=0...
  init_LA        = T !T: compute lambda from initial mapping (default),  F: lambda=0 at initialization 


!================================================================================================================================= !
! visualization
!================================================================================================================================= !
which_visu = 0          ! 0: visualize gvec data, 1: visualize vmec data (whichInitEquilibrium=1)
visu1D       = 12     ! 0: off, >0:  write 1D data of all modes of R,Z,lambda over the flux / radial coordinate
  np_1d      = 5 
visu2D       = 12       ! 0: off, 1: write paraview file of boundary, 2: write paraview file for zeta=const. planes 
  np_visu_BC     =   (/80,80/)
  visu_BC_min     = (/ 0.,0. /)  ! range of visualization for s,theta,zeta: min in [0,1]
  visu_BC_max     = (/ 1.,1. /)  !                                          max in [0,1]
  np_visu_planes = (/5,20,3/)
visu3D       = 1        ! 0: off, 1: write 3D paraview file 
  np_visu_3D     = (/2,20,20/)

!visu_min/max applies to visu_BC,visu_planes and visu_3D if not specified
visu_min     = (/0. , 0.,0.  /)  ! range of visualization for s,theta,zeta: min in [0,1]
visu_max     = (/1. , 1.,0.25/)  !                                          max in [0,1]
!================================================================================================================================= !
! grid in s direction
!================================================================================================================================= !
sgrid_nElems=7
sgrid_grid_type=4  ! 0: uniform, 1: sqrt (finer at edge), 2: s^2 (finer at axis), 3: bump (fine at axis&edge), 4: uniform at axis, finer at edge

!================================================================================================================================= !
! discretization parameters
!================================================================================================================================= !

degGP  = 7               ! number of gauss points per radial element

fac_nyq = 4             ! number of points for integration in (theta,zeta), :mn_nyq=fac_nyq * max(mn_max (all variables)) 
 
X1X2_deg  = 5            !polynomial degree in radial discretization for X1 and X2 variable

nfp = 2
X1_mn_max = (/ 7, 2/)   !maximum mumber of fourier modes (mmax,nmax)
X1_sin_cos = _cos_       !which fourier modes: can be either _sin_,_cos_, or _sincos_

X2_mn_max = (/ 6 ,2/)   !maximum mumber of fourier modes (mmax,nmax)
X2_sin_cos = _sin_       !

LA_deg    = 4            ! polynomial degree in radial discretization for Lambda variable
LA_continuity =3        ! continuity of the radial discretization (-1: discontinuous, deg-1: spline (default)) 
LA_mn_max = (/5, 2/)   ! maximum mumber of fourier modes (mmax,nmax)
LA_sin_cos = _sin_       !

which_hmap = 1           ! type of global mapping h between (X1,X1,zeta)->(x,y,z), 1: R=X1,Z=X2 torus, 2: cylinder, 10: knot
  hmap_cyl_len=20.       ! for cylinder map


!================================================================================================================================= !
! fourier modes at the edge boundary condition
! FORMAT AA_X_ccc( M; N) with AA: X1,X2 , X=a/b (axis/edge) 
!                             ccc: cos/sin, ( M; N) without NFP with any number of whitespaces: (  0;  0) ( 1; 0) ( -1; -2) 
! modes which are not specified here are set to zero!!!
!================================================================================================================================= !
X1_b_cos(  0;  0) = 4.0 
X2_b_sin(  1;  0) =  1.0 

X1_b_cos(  1;  0) =  1.0 

X1_b_cos(  1;  1) =  0.4 
X2_b_sin(  1;  1) = -0.4 

!axis only used for initialization:
X1_a_cos(  0;  0) = 4.1 

X1_a_cos(  0;  1) = 0.3 
X2_a_sin(  0;  1) =-0.2 


!================================================================================================================================= !
! profiles
!================================================================================================================================= !
iota_coefs= (/ 0.9, 0. /) !(a,b,c) : iota(phi_norm)=a+b*phi_norm+c*phi_norm^2 ...             phi_norm: normalized tor.flux
pres_coefs= (/ 1.0, 0. /)
pres_scale=1500. !

PHIEDGE    = -1.5                ! torodial flux at the last flux surface


!================================================================================================================================= !
! iteration
!================================================================================================================================= !
MaxIter =1000            ! maximum number of iterations
start_dt=0.2            ! first timestep, is automatically adapted
minimize_reltol=1.0e-10   ! relative tolerance |Force|<reltol*|Force(u0)|
outputIter =500          ! number of iterations after which a state & visu is written
logIter = 20             ! write log of iterations to screen 

PrecondType =  1 ! -1: off(default), 1: on
MinimizerType = 0 ! 0: descent, 10: accelerated GD
