!================================================================================================================================= !
! PARAMETERFILE 
! execute with
! > ../../build/bin/gvec parameter.ini

!================================================================================================================================= !
! compute initial solution from existing equilibrium
!================================================================================================================================= !

  ProjectName = GVEC_Frenet_QH_NFP7_UNTWISTED


  whichInitEquilibrium = 0 ! 0: only from input parameters, 1: from VMEC netcdf file, 2: from internally generated Soloview

!    init_fromBConly = F ! ONLY used if whichInitEquilibrium=1 (VMEC input)
                        ! =T: only use axis and boundary for X1,X2 (True is default) 
                        ! =F: if VMEC input is used, interpolate VMEC data  on the full mesh s=0...1

  init_LA         = F ! T: compute lambda from initial mapping (default),  
                      ! F: lambda=0 or if whichInitEquilibrium=1 use VMEC at initialization 


!================================================================================================================================= !
! visualization parameters
!================================================================================================================================= !
which_visu = 0          ! 0: visualize gvec data, 1: visualize vmec data (whichInitEquilibrium=1)
visu1D       = 0 !12     ! 0: off, >0:  write 1D data of all modes of R,Z,lambda over the flux / radial coordinate
  np_1d      = 5 
visu2D       = 12       ! 0: off, 1: write paraview file of boundary, 2: write paraview file for zeta=const. planes 
  np_visu_BC     =   (/81,250/)
  visu_BC_min     = (/ 0.,0. /)  ! range of visualization for s,theta,zeta: min in [0,1]
  visu_BC_max     = (/ 1.,1./)  !                                          max in [0,1]
  np_visu_planes = (/8,12,29/)

  visu_planes_min     = (/0. , 0. , 0. /)  ! range of visualization for s,theta,zeta: min in [0,1]
  visu_planes_max     = (/1. , 1. , 1. /)  !                                          max in [0,1]
visu3D       = 0 !1        ! 0: off, 1: write 3D paraview file 
!  np_visu_3D     = (/2,120,360/)
  np_visu_3D     = (/8,12,80/)

!visu_min/max applies to visu_BC,visu_planes and visu_3D if not specified
visu_3D_min     = (/0.2 ,-1.,-0.1 /)  ! range of visualization for s,theta,zeta: min in [0,1]
visu_3D_max     = (/1.  , 1., 0.1 /)  !                                          max in [0,1]

!SFLout=2 ! =0: off, =1: write an output in straight-field line coordinates at given SFLout_radialpos positions [0;1].
  SFLout_radialpos=(/0.01,0.1,0.5,1.0/) ! radial output positions ~sqrt(psi) 
  SFLout_mn_max = (/15,15/)
  SFLout_mn_pts = (/80,80/) 
!================================================================================================================================= !
! grid in s direction
!================================================================================================================================= !
sgrid_nElems=2
sgrid_grid_type=0  ! 0: uniform, 1: sqrt (finer at edge), 2: s^2 (finer at center), 3: bump (fine at edge and center)

!================================================================================================================================= !
! discretization parameters
!================================================================================================================================= !

degGP  = 7               ! number of gauss points per radial element

X1X2_deg  = 5            !polynomial degree in radial discretization for X1 and X2 variable

X1_mn_max = (/ 4,15/)   !maximum mumber of fourier modes (mmax,nmax)
X1_sin_cos = _cos_       !which fourier modes: can be either _sin_,_cos_, or _sincos_

X2_mn_max = (/ 4,15/)   !maximum mumber of fourier modes (mmax,nmax)
X2_sin_cos = _sin_       !

LA_deg    = 5            ! polynomial degree in radial discretization for Lambda variable
LA_mn_max = (/ 4, 15/)    ! maximum mumber of fourier modes (mmax,nmax)
LA_sin_cos = _sin_       !

which_hmap = 20         
!which_hmap=21    ! type of global mapping h between (X1,X1,zeta)->(x,y,z), 1: R=X1,Z=X2 torus, 3: cylinder, 10: knot, 20: Frenet of curve, 21: axisNB: periodic curve+NB frame 



  ! rc,zs
!  hmap_n_max= 3            ! maximum mode number
!  !array of mode numbers 0...n_max (hmap_rc,_R0s,_Z0c,Z0_s)
!  hmap_rc  = (/1.3, 0.3,  0.01, -0.001 /)
!  hmap_zs  = (/0. , 0.4, -0.02, -0.003 /)
!  hmap_omnig= F            ! omnigenity (sign change of frame normal and bi-normal at pi/nfp)  
!  hmap_nvisu = 15          ! if >0 a visualization file is written for the axis, nvisu=number of points per field period

  nfp = 7             ! nfp must be set once 
  hmap_nfp = 7             ! nfp must be set for hmap separaterly 
  hmap_n_max= 19            ! maximum mode number
  !array of mode numbers 0...n_max (hmap_rc,_R0s,_Z0c,Z0_s)
  hmap_omnig= F  
  hmap_nvisu = 20  
  hmap_rc=(/1, 0.258042492428667, 0.0737980849415119, 0.0245235419692282,             &
            0.0087489425800056, 0.00325710762056782, 0.00124798398776684,             &
            0.00048824282997784, 0.000194039834892702, 7.80531836428887e-05,          &
            3.16850344178095e-05, 1.29427362598943e-05, 5.30054625293292e-06,         &
            2.16386280302807e-06, 8.71522369664416e-07, 3.39805766815203e-07,         &
            1.2389287673191e-07, 3.9648686370117e-08, 9.84425205161371e-09, 1.39986408835728e-09 /)
  hmap_zs=(/0, 0.259299681361503, 0.0744954847634618, 0.0247675058258839,    &    
            0.00883445611523715, 0.00328774095300022, 0.00125909923475415,    &
            0.000492254404917503, 0.000195431061105875, 7.84791099248868e-05, &
            3.17656436049729e-05, 1.29116163099803e-05, 5.24481359745833e-06, &
            2.11430136671029e-06, 8.36820327603084e-07, 3.19761744590898e-07, &
            1.14811054736367e-07, 3.69561282325895e-08, 9.69489045054884e-09, 1.59629224344766e-09/)



!================================================================================================================================= !
! fourier modes at the edge boundary condition
! FORMAT AA_X_ccc( M; N) with AA: X1,X2 , X=a/b (axis/edge) 
!                             ccc: cos/sin, ( M; N) without NFP with any number of whitespaces: (  0;  0) ( 1; 0) ( -1; -2) 
! modes which are not specified here are set to zero!!!
!================================================================================================================================= !
!Note, the transform to X1,X2 in Frenet is not complete for this case, since the second order term in "z" direction of the NAE is left out here 
!translate to gvec's X1_b_cos(m,-ntor..ntor), r=0.100000, m=1, ntor=15
X1_b_cos( 1;-15) =     2.49987384387e-08
X1_b_cos( 1;-14) =     6.56418766747e-08
X1_b_cos( 1;-13) =     1.75624495533e-07
X1_b_cos( 1;-12) =     4.59728207476e-07
X1_b_cos( 1;-11) =     1.18180735442e-06
X1_b_cos( 1;-10) =     3.01513399454e-06
X1_b_cos( 1;-9) =     7.70482306756e-06
X1_b_cos( 1;-8) =     1.98757202866e-05
X1_b_cos( 1;-7) =     5.21638952874e-05
X1_b_cos( 1;-6) =     1.40548351287e-04
X1_b_cos( 1;-5) =     3.93508720032e-04
X1_b_cos( 1;-4) =     1.16494861252e-03
X1_b_cos( 1;-3) =     3.78991226466e-03
X1_b_cos( 1;-2) =     1.35660491182e-02
X1_b_cos( 1;-1) =     9.94057009660e-02
X1_b_cos( 1; 0) =    -3.89645163330e-02
X1_b_cos( 1; 1) =     6.56597430955e-04
X1_b_cos( 1; 2) =    -1.77912848964e-04
X1_b_cos( 1; 3) =    -4.55666433526e-05
X1_b_cos( 1; 4) =    -1.51640864165e-05
X1_b_cos( 1; 5) =    -5.10599041457e-06
X1_b_cos( 1; 6) =    -1.77011163484e-06
X1_b_cos( 1; 7) =    -6.20344924581e-07
X1_b_cos( 1; 8) =    -2.13816980427e-07
X1_b_cos( 1; 9) =    -6.76244071485e-08
X1_b_cos( 1;10) =    -1.48821031911e-08
X1_b_cos( 1;11) =     3.80682926528e-09
X1_b_cos( 1;12) =     9.92270995096e-09
X1_b_cos( 1;13) =     1.09276091619e-08
X1_b_cos( 1;14) =     9.04068980247e-09
X1_b_cos( 1;15) =     4.80849299679e-09
!translate to gvec's X2_b_sin(m,-ntor..ntor), r=0.100000, m=1, ntor=15
X2_b_sin( 1;-15) =    -5.02167235309e-07
X2_b_sin( 1;-14) =    -5.19151796110e-07
X2_b_sin( 1;-13) =    -4.26190123354e-07
X2_b_sin( 1;-12) =    -8.55944479271e-08
X2_b_sin( 1;-11) =     8.69473806908e-07
X2_b_sin( 1;-10) =     3.39980838939e-06
X2_b_sin( 1;-9) =     1.00176463668e-05
X2_b_sin( 1;-8) =     2.73481254047e-05
X2_b_sin( 1;-7) =     7.31464598770e-05
X2_b_sin( 1;-6) =     1.96165296283e-04
X2_b_sin( 1;-5) =     5.35354783052e-04
X2_b_sin( 1;-4) =     1.51044482667e-03
X2_b_sin( 1;-3) =     4.56176061980e-03
X2_b_sin( 1;-2) =     1.49260628965e-02
X2_b_sin( 1;-1) =     1.01402508455e-01
X2_b_sin( 1; 0) =     7.66424908682e-03
X2_b_sin( 1; 1) =    -4.96412697372e-03
X2_b_sin( 1; 2) =    -6.60913324526e-04
X2_b_sin( 1; 3) =    -1.87397057277e-04
X2_b_sin( 1; 4) =    -5.77323866143e-05
X2_b_sin( 1; 5) =    -1.90005651228e-05
X2_b_sin( 1; 6) =    -6.19620206791e-06
X2_b_sin( 1; 7) =    -1.75603937406e-06
X2_b_sin( 1; 8) =    -1.89370175745e-07
X2_b_sin( 1; 9) =     3.48888593829e-07
X2_b_sin( 1;10) =     5.06295175798e-07
X2_b_sin( 1;11) =     5.13299103363e-07
X2_b_sin( 1;12) =     4.51533488935e-07
X2_b_sin( 1;13) =     3.51579888076e-07
X2_b_sin( 1;14) =     2.30332092236e-07
X2_b_sin( 1;15) =     1.06202308819e-07
!translate to gvec's X1_b_cos(m,-ntor..ntor), r=0.100000, m=2, ntor=15
X1_b_cos( 2;-15) =     3.23851452062e-06
X1_b_cos( 2;-14) =     2.86293005841e-06
X1_b_cos( 2;-13) =     2.44325776381e-06
X1_b_cos( 2;-12) =     1.90887412242e-06
X1_b_cos( 2;-11) =     9.73050367848e-07
X1_b_cos( 2;-10) =    -1.18828563431e-06
X1_b_cos( 2;-9) =    -6.78857435303e-06
X1_b_cos( 2;-8) =    -2.16506164930e-05
X1_b_cos( 2;-7) =    -6.07656113883e-05
X1_b_cos( 2;-6) =    -1.61668564956e-04
X1_b_cos( 2;-5) =    -4.14064885767e-04
X1_b_cos( 2;-4) =    -1.01456552282e-03
X1_b_cos( 2;-3) =    -2.26602943564e-03
X1_b_cos( 2;-2) =    -4.08697762277e-03
X1_b_cos( 2;-1) =     3.43281466340e-03
X1_b_cos( 2; 0) =    -4.56849050164e-04
X1_b_cos( 2; 1) =    -8.94435798523e-06
X1_b_cos( 2; 2) =     3.61313371957e-06
X1_b_cos( 2; 3) =     2.79929134098e-06
X1_b_cos( 2; 4) =     5.32397020344e-07
X1_b_cos( 2; 5) =    -6.10066660722e-07
X1_b_cos( 2; 6) =    -1.23408431582e-06
X1_b_cos( 2; 7) =    -1.61660711600e-06
X1_b_cos( 2; 8) =    -1.90394079420e-06
X1_b_cos( 2; 9) =    -2.14660498471e-06
X1_b_cos( 2;10) =    -2.31349665885e-06
X1_b_cos( 2;11) =    -2.31838263273e-06
X1_b_cos( 2;12) =    -2.05810151714e-06
X1_b_cos( 2;13) =    -1.44821680866e-06
X1_b_cos( 2;14) =    -5.01468389823e-07
X1_b_cos( 2;15) =     5.70536718704e-07
!translate to gvec's X2_b_sin(m,-ntor..ntor), r=0.100000, m=2, ntor=15
X2_b_sin( 2;-15) =    -3.44700591319e-06
X2_b_sin( 2;-14) =    -3.14612695637e-06
X2_b_sin( 2;-13) =    -2.88404762127e-06
X2_b_sin( 2;-12) =    -2.74750542086e-06
X2_b_sin( 2;-11) =    -2.80701971778e-06
X2_b_sin( 2;-10) =    -3.08110158851e-06
X2_b_sin( 2;-9) =    -3.37075745774e-06
X2_b_sin( 2;-8) =    -2.70425949157e-06
X2_b_sin( 2;-7) =     2.17839755218e-06
X2_b_sin( 2;-6) =     2.03426016854e-05
X2_b_sin( 2;-5) =     7.22469792080e-05
X2_b_sin( 2;-4) =     1.86658797037e-04
X2_b_sin( 2;-3) =     2.84747165801e-04
X2_b_sin( 2;-2) =    -5.41239133999e-04
X2_b_sin( 2;-1) =     4.05805549446e-04
X2_b_sin( 2; 0) =    -7.88370684296e-05
X2_b_sin( 2; 1) =    -6.21829889308e-05
X2_b_sin( 2; 2) =    -1.03291137255e-05
X2_b_sin( 2; 3) =    -2.19333452442e-06
X2_b_sin( 2; 4) =     3.25341919621e-07
X2_b_sin( 2; 5) =     1.15867027987e-06
X2_b_sin( 2; 6) =     1.55359079946e-06
X2_b_sin( 2; 7) =     1.82911918953e-06
X2_b_sin( 2; 8) =     2.08411740780e-06
X2_b_sin( 2; 9) =     2.33436953990e-06
X2_b_sin( 2;10) =     2.52958025753e-06
X2_b_sin( 2;11) =     2.57218632890e-06
X2_b_sin( 2;12) =     2.34888324730e-06
X2_b_sin( 2;13) =     1.76314192569e-06
X2_b_sin( 2;14) =     8.12236138409e-07
X2_b_sin( 2;15) =    -3.09609929511e-07
!axis only used for initialization:
X1_a_cos(  0;  0) = 0.


!================================================================================================================================= !
! profiles
!================================================================================================================================= !
iota_coefs= (/-0.7  /) !(a,b,c,d,...) : iota(phi_norm)=a+b*phi_norm+c*phi_norm^2 ...             phi_norm: normalized tor.flux
pres_coefs= (/ 0.0 /)
pres_scale=1500. !

PHIEDGE    = 0.031415926535897934                 ! torodial flux at the last flux surface

!================================================================================================================================= !
! iteration
!================================================================================================================================= !
MaxIter =50 !5000            ! maximum number of iterations
start_dt=4.0e-1           ! first timestep, is automatically adapted
minimize_tol=1.0e-10   ! absolute tolerance |Force|*dt<abstol
outputIter = 200          ! number of iterations after which a state & visu is written
logIter = 200             ! write log of iterations to screen 

PrecondType =1 ! -1: off(default), 1: on
MinimizerType = 0 ! 0: descent(default), 10: accel. GD
