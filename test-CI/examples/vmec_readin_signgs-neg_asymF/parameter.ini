!================================================================================================================================= !
! PARAMETERFILE 
! execute with
! > ../build/bin/gvec parameter.ini

!================================================================================================================================= !
! compute initial solution from existing equilibrium
!================================================================================================================================= !

ProjectName = GVEC_W7X_INIT_VMEC

whichInitEquilibrium = 1 ! 0: only from input parameters, 1: from VMEC netcdf file
    vmecwoutFile= wout_test-signgs-neg-asymF.nc
    vmecwoutFile_Format=0     !=0: netcdf format(default), =1: ascii nemec format, =2: binary nemec format

                         
init_fromBConly = F  ! T: only use axis and boundary for X1,X2 (True is default) 
                     ! F: only needed if VMEC data is used, interpolate on full mesh s=0...1
init_LA         = F  ! T: compute lambda from initial mapping (default),  F: lambda=0 at initialization 


!================================================================================================================================= !
! visualization
!================================================================================================================================= !
which_visu = 0        ! 0: visualize gvec data, 1: visualize vmec data (needs whichInitEquilibrium=1)
!visu1D       = 12  ! 0 (default): off, >0:  write 1D data of all modes of R,Z,lambda over the flux / radial coordinate
  np_1d      = 5      ! number of radial points per spline element
!visu2D       = 12  ! 0 (default): off, 1: write paraview file of boundary, 2: write paraview file for zeta=const. planes 
  np_visu_BC     =   (/80,80/)   ! visu2d=1: number of points in theta,zeta
  visu_BC_min     = (/ 0.,0. /)  ! visu2D=1: range of visualization for s,theta,zeta: min in [0,1]
  visu_BC_max     = (/ 1.,1. /)  !                                                    max in [0,1]
  np_visu_planes = (/3,40,2/)    ! visu2D=2: number of points in radial,theta,zeta(planes). Note that radial is per element, and number of points in theta is multiplied by radial.
!visu3D       = 1                ! 0: off (default), 1: write 3D paraview file 
  np_visu_3D     = (/2,40,20/)   ! visu3D: number of points in radial,theta,zeta(planes). Note that radial is per element, and number of points in theta is multiplied by radial.
!visu_min/max applies to visu_planes and visu_3D if not specified
visu_min     = (/0. , 0.,0.  /)  ! range of visualization for s,theta,zeta: min in [0,1]
visu_max     = (/1. , 1.,0.2 /)  !                                          max in [0,1]
outFileType = 12 !! =0: no output file generated. 1: paraview vtu files (default), 2: netcdf files, 12: both vtu and netcdf files
!SFLout=12 ! =0: off, =1/2: write an output in straight-field line coordinates at given SFLout_radialpos positions [0;1]. 1: PEST, 2: Boozer, 12: PEST and BOOZER
  SFLout_radialpos=(/0.1,0.5,1.0/) ! radial output positions ~sqrt(psi) 
  SFLout_mn_max=(/10,10/)     ! number of modes for transform, default (/-1,-1/) will choose a multiple of the input fourier modes.
  SFLout_mn_pts = (/80,80/)   ! number of points in output


!================================================================================================================================= !
! grid in s direction
!================================================================================================================================= !
sgrid_nElems=9
sgrid_grid_type=4  ! 0: uniform, 1: sqrt (finer at edge), 2: s^2 (finer at axis), 3: bump (fine at axis&edge), 4: uniform at axis, finer at edge

!================================================================================================================================= !
! discretization parameters
!================================================================================================================================= !

degGP  = 8               ! number of gauss points per radial spline element , must be > X1X2_deg,LA_deg

fac_nyq = 4             ! nyquist factor. if set to -1, use mn_nyq directly

X1X2_deg  = 5            ! polynomial degree in radial discretization for X1 and X2 variable

! X1_mn_max = (/ 7, 7/)   ! X1 variable: maximum fourier mode number (m_max,n_max) (if initializing from VMEC file, this would overwrite the VMEC resolution)
! X1_sin_cos = _cos_      ! X1 variable: which fourier modes: can be either _sin_,_cos_, or _sincos_ (if initializing from VMEC file, this would overwrite the VMEC VMEC setting)
! X2_mn_max = (/ 7, 7/)   ! X2 variable: maximum fourier mode number (m_max,n_max) (if initializing from VMEC file, this would overwrite the VMEC resolution)
! X2_sin_cos = _sin_      ! X2 variable: which fourier modes: can be either _sin_,_cos_, or _sincos_ (if initializing from VMEC file, this would overwrite the VMEC VMEC setting)

LA_deg    = 5             ! polynomial degree in radial discretization for Lambda variable
LA_continuity =4         ! continuity of the radial discretization (-1: discontinuous, deg-1: spline (default)) 
! LA_mn_max = (/12, 13/)  ! lambda variable: maximum fourier mode number (m_max,n_max) (if initializing from VMEC file, this would overwrite the VMEC resolution)
! LA_sin_cos = _sin_      ! lamda variable: which fourier modes: can be either _sin_,_cos_, or _sincos_ (if initializing from VMEC file, this would overwrite the VMEC VMEC setting)

!================================================================================================================================= !
! iteration
!================================================================================================================================= !
MaxIter =50            ! maximum number of iterations
start_dt=0.1             ! first timestep, is automatically adapted
minimize_tol=1.0e-11    ! relative tolerance |Force|^2<reltol*|Force(u0)|^2
outputIter =10          ! number of iterations after which a state & visu is written
logIter = 5            ! write log of iterations to screen 

PrecondType =  1         ! Gradient descent Preconditioner:  -1: off(default), 1: on
MinimizerType = 10       ! 0: gradient descent, 10: accelerated GD
