!================================================================================================================================= !
! PARAMETERFILE
! execute with
! > ../../build/bin/gvec parameter.ini


!================================================================================================================================= !
! compute initial solution from existing equilibrium
!================================================================================================================================= !

  ProjectName = CIRCTOK

  whichInitEquilibrium = 0 ! 0: only from input parameters, 1: from VMEC netcdf file


  init_LA         = T ! T: compute lambda from initial mapping (default),
                      ! F: lambda=0 or if whichInitEquilibrium=1 use VMEC at initialization

!================================================================================================================================= !
!  input profiles
!================================================================================================================================= !
  sign_iota=1
  iota_coefs=(/0.625,0.523/)  !<<<!coefficients a_0 + a_1 *s +a_2*s^2 ... , polynomial in s (=normalized toroidal flux)

  pres_scale=1.0
  pres_coefs=(/0.02,-1.36878012275e-02/) !<<<!coefficients a_0 + a_1 *s +a_2*s^2 ... , polynomial in s (=normalized toroidal flux)
  
  PsiEdge =1.0   !<<<! toroidal flux at s=1 (might have a 2pi factor...)

!================================================================================================================================= !
! Boundary modes
! fourier modes at the edge boundary condition
! FORMAT AA_X_ccc( M; N) with AA: X1,X2 , X=a/b (axis/edge) 
!                             ccc: cos/sin, ( M; N) without NFP with any number of whitespaces: (  0;  0) ( 1; 0) ( -1; -2) 
! modes which are not specified here are set to zero!!!
!================================================================================================================================= !
!boundary m;n modes <<<<<
X1_b_cos(  0;  0) = 5.0 

X1_b_cos(  1;  0) = 1.0 
X2_b_sin(  1;  0) = 1.0 


!axis m;n modes, only used for initialization 
X1_a_cos(  0;  0) = 5.  !<<<! initial guess of the axis position, in R, must be inside of the boundary  (typically enough to set=X1_b_cos(0,0))


!================================================================================================================================= !
! discretization parameters
! if not specified & VMEC input used, number of modes/_cos_ _sin_ is taken from vmec input
!================================================================================================================================= !
  sgrid_nElems=4     !<<<! number of radial elements
  sgrid_grid_type=0  ! 0: uniform, 1: sqrt (finer at edge), 2: s^2 (finer at center), 3: bump (fine at edge and center)
                     ! 4: nearly uniform at the axis, stretched towards the edge

  degGP  = 8               ! number of gauss points per radial element

  X1X2_deg  = 5           !<<<!polynomial degree in radial discretization for X1 and X2 variable
  LA_deg    = 5             ! polynomial degree in radial discretization for Lambda variable
  X1_mn_max = (/ 2, 0/)   !<<<!maximum mumber of fourier modes (mmax,nmax) ...X1 is equivalent to R
  X2_mn_max = (/ 2, 0/)   !<<<!maximum mumber of fourier modes (mmax,nmax) ...X2 is equivalent to Z
  LA_mn_max = (/ 2, 0/)    !<<<<! maximum mumber of fourier modes (mmax,nmax)

  X1_sin_cos = _cos_       !which fourier modes: can be either _SIN_,_COS_, or _sin_cos_
  X2_sin_cos = _sin_       !
  LA_sin_cos = _sin_       !

  nfp = 1 !number of field periods
!================================================================================================================================= !
! solver parameters
!================================================================================================================================= !
maxiter =1000            ! maximum number of iterations
start_dt=0.5           ! first timestep, should be chosen large, is automatically reduced
! outputIter =1000000          ! number of iterations after which a state & visu is written (default=maxiter)
! logIter = 1000000              ! write log of iterations to screen  (default=maxiter)

minimize_tol=1.0e-8   ! absolute tolerance |Force|*dt<abstol: WARNING, DOES NOT WORK YET!!!!

PrecondType   = 1 ! -1: off(default), 1: on
MinimizerType = 10 ! 0: descent(default), 10: accel. GD
