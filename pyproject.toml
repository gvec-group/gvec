# Python package configuration
# ============================================================================ #
[build-system]
requires = [
    "scikit-build-core",
    "f90wrap",
    "numpy<2",  # for f2py
]
build-backend = "scikit_build_core.build"

# ============================================================================ #
[project]
name = "gvec"
description = "Galerkin Variational Equilibrium Code"
dependencies = [
    "f90wrap",
    "numpy<2",
    "xarray",
]
authors = [
    {name = "Florian Hindenlang"},
    {name = "Tiago Tamissa Ribeiro"},
    {name = "Robert Babin"},
]
maintainers = [
    {name = "Florian Hindenlang", email = "florian.hindenlang@ipp.mpg.de"},
    {name = "Robert Babin", email = "robert.babin@ipp.mpg.de"},
]
requires-python = ">=3.10"
# match-case, intrinsic typing union
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Fortran",
    # "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    # "License :: OSI Approved :: MIT License"
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Physics",
    "Private :: Do Not Upload",
]
keywords = ["plasma", "mhd", "equilibrium"]
readme.file = "README.md"
readme.content-type = "text/markdown"
license.file = "LICENSE"
dynamic = ["version"]

[project.urls]
#Homepage
Documentation = "https://gvec-group.pages.mpcdf.de/gvec"
Repository = "https://gitlab.mpcdf.mpg.de/gvec-group/gvec"
Issues = "https://gitlab.mpcdf.mpg.de/gvec-group/gvec/-/issues"

[project.optional-dependencies]
dev = ["pytest"]
examples = ["matplotlib", "jupyter"]

# ============================================================================ #
[tool.scikit-build]
minimum-version = "0.8"
logging.level = "DEBUG"
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
sdist.include = [
    "python/gvec/_version.py",
]
sdist.exclude = [
    # exclude large files
    "ini",
    "test-CI/data",
    # exclude unnecessary files
    "CI_templates",
    "template",
    "test-CI",
    "tools",
]
build-dir = "pybuild"

[tool.scikit-build.cmake]
verbose = true
version = ">=3.22"
args = [
    "-GUnix Makefiles", # Ninja doesn't work with the macro for CMAKE_Fortran_FLAGS
]

[tool.scikit-build.cmake.define]
CMAKE_BUILD_TYPE = "Release"
CMAKE_HOSTNAME = {env="CMAKE_HOSTNAME"}
COMPILE_PYGVEC = "On"
COMPILE_GVEC = "On"
LINK_GVEC_TO_NETCDF = "On"
USE_OPENMP = "On"
COMPILE_GVEC_AS_STATIC_LIB = "On"

[tool.setuptools_scm]
version_file = "python/gvec/_version.py"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]

[tool.ruff.lint.per-file-ignores]
"test_*.py" = ["F841"]
"*.py" = ["F401"]
